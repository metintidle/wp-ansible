---
- name: Setup image plugin for fixing upload issues
  hosts: all
  become: true
  gather_facts: false
  vars:
    controller_src_dir: "/tmp/semaphore/src/wp-maintenance-plugin" # lives in the container
    controller_archive: "/artifacts/wp-maintenance.tar.gz" # lives in the container (mounted)
    remote_archive: "/tmp/wp-maintenance.tar.gz"
    web_user: "{{ ansible_user | default('ec2-user') }}"

  pre_tasks:
    - name: Ensure artifacts dir exists on controller
      ansible.builtin.file:
        path: "/artifacts"
        state: directory
        mode: "0755"
      delegate_to: localhost
      run_once: true


  tasks:

    - name: Install Image packages
      package:
        name:
          - gcc
          - ImageMagick
          - ImageMagick-devel
          - libwebp-tools
          - netpbm-progs
          - libjpeg-turbo-utils
        state: present
      register: pkg_result
      failed_when: false  # Some names may not exist on all distros; continue
      changed_when: pkg_result is changed

    - name: Compress the wp-maintence plugin folder locally
      community.general.archive:
          path: "{{ controller_src_dir }}"
          dest: "{{ controller_archive }}"
          format: gz
      delegate_to: localhost
      run_once: true

    - name: Upload the compressed plugin to the remote server
      ansible.builtin.copy:
        src: "{{ controller_archive }}"
        dest: "{{ remote_archive }}"
        mode: '0644'

    - name: Uncompress the plugin on the remote server
      ansible.builtin.unarchive:
        src: "{{ remote_archive }}"
        dest: /home/ec2-user/html/wp-content/plugins/
        remote_src: yes # Tells Ansible the source is on the remote machine
        owner: "{{ web_user }}"
        group: nginx

    - name: Clean up the archive on the remote server
      ansible.builtin.file:
        path: "{{ remote_archive }}"
        state: absent

    - name: Clean up the local archive on the controller
      ansible.builtin.file:
        path: "{{ controller_archive }}"
        state: absent
      delegate_to: localhost
      become: false
      run_once: true
