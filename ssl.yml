---
- name: Setup SSL on Amazon Linux
  hosts: all
  become: yes
  vars:
    domain_names:
      - "{{ domain_name }}"
      - "www.{{ domain_name }}"
      # - "{{ domain_name1 }}"
      # - "www.{{ domain_name1 }}"
      # - "{{ domain_name2 }}"
      # - "www.{{ domain_name2 }}"
      # - "{{ domain_name3 }}"
      # - "www.{{ domain_name3 }}"
      # Add more domains as needed, up to a maximum of 4
      # - "subdomain1.{{ domain_name }}"
      # - "subdomain2.{{ domain_name }}"

  tasks:
    - name: Update the package index
      yum:
        name: '*'
        state: latest
        update_cache: yes

    - name: Install EPEL repository
      command: amazon-linux-extras install epel -y

    - name: Check if Lego is installed
      stat:
        path: /usr/local/bin/lego
      register: lego_installed

    - name: Get latest Lego release info
      uri:
        url: https://api.github.com/repos/go-acme/lego/releases/latest
        return_content: yes
      register: lego_release_info

    - name: Set Lego download URL
      set_fact:
        lego_download_url: "{{ lego_release_info.json.assets | selectattr('name', 'match', 'lego_.*_linux_amd64.tar.gz') | map(attribute='browser_download_url') | first }}"

    - name: Print Lego download URL
      debug:
        msg: "Lego download URL: {{ lego_download_url }}"

    - name: Download latest Lego release
      get_url:
        url: "{{ lego_download_url }}"
        dest: /tmp/lego.tar.gz

    - name: Unarchive Lego
      unarchive:
        src: /tmp/lego.tar.gz
        dest: /usr/local/bin/
        remote_src: yes

    - name: Print Lego version
      command: /usr/local/bin/lego --version
      register: lego_version_output

    - name: Display Lego version
      debug:
        msg: "Lego version: {{ lego_version_output.stdout }}"

    - name: Construct Lego command
      set_fact:
        lego_command: "/usr/local/bin/lego --email 'wp.monitoring.log@gmail.com' --path /etc/lego --tls run  {{ domain_args | join(' ') }}"
      vars:
        domain_args: "{{ domain_names | map('regex_replace', '^', '-d ') | list }}"

    - name: Print Lego command
      debug:
        msg: "{{ lego_command }}"

    - name: Run Lego command
      command: "{{ lego_command }}"


    - name: Add a cron job to renew Lego certificates twice a day as root
      cron:
        name: "Renew Lego certificates"
        minute: "30"
        hour: "2,14"
        job: "/usr/local/bin/lego --email 'wp.monitoring.log@gmail.com' --path /etc/lego renew --days 30 --tls {{ domain_args | join(' ') }}"
        state: present
      vars:
        domain_args: "{{ domain_names | map('regex_replace', '^', '-d ') | list }}"


    - name: write the code in a file and create that
      copy:
        content: |
          server {
               client_max_body_size 256M;
                listen       443 ssl http2;
                listen       [::]:443 ssl http2;
                server_name  _;
                root         /usr/share/nginx/html;
                index  index.php index.html index.htm ;

                ssl_certificate "/etc/lego/certificates/{{domain_name}}.crt";     # Full chain certificate
                ssl_certificate_key "/etc/lego/certificates/{{ domain_name }}.key"; # Private key

               location / {
                  try_files $uri $uri/ /index.php?$args;  # Pass to index.php if not found
                }
          }
        dest: /etc/nginx/conf.d/ssl.conf

    - name: Test Nginx configuration
      command: nginx -t
      register: nginx_test_result
      ignore_errors: yes

    - name: Restart Nginx
      service:
        name: nginx
        state: restarted
      when: nginx_test_result.rc == 0





# /usr/local/bin/lego --email "wp.monitoring.log@gmail.com" --domains setinsteel.com.au --domains www.setinsteel.com.au --path /etc/lego --tls run