---
- name: Setup SSL on Amazon Linux
  hosts: all
  become: yes
  vars:
    domain_names:
    - "{{ domain_name | default('') }}"
    - "{{ domain_name1 | default('') }}"
    - "{{ domain_name2 | default('') }}"
    - "{{ domain_name3 | default('') }}"

  tasks:
  - name: find the domain name in nginx.conf
    shell: "grep -oP 'server_name\\s+\\K[^;]+' /etc/nginx/nginx.conf"
    register: nginx_domain_names

  - name: Set domain names with www subdomains
    set_fact:
      processed_domain_names: "{{ domain_names | select('match', '^[^\\s]+$') | select('string') | map('regex_replace', '^(.*)$', '\\1 www.\\1') | join(' ') }}"

  - name: Print processed domain names
    debug:
      msg: "Processed domain names: {{ processed_domain_names }}"

  - name: Replace server_name in nginx.conf
    lineinfile:
      path: /etc/nginx/nginx.conf
      regexp: '^\s*server_name\s*_;\s*$'
      line: server_name "{{ processed_domain_names }}"
    when: domain_name not in nginx_domain_names.stdout

  - name: Restart Nginx
    service:
      name: nginx
      state: restarted

  - name: Check if EPEL repository is installed
    stat:
      path: /etc/yum.repos.d/epel.repo
    register: epel_repo

  - name: Install EPEL repository
    command: amazon-linux-extras install epel -y
    when: not epel_repo.stat.exists

  - name: Check if Certbot is installed
    stat:
      path: /usr/bin/certbot
    register: certbot_installed

  - name: Install Certbot
    command: yum install certbot certbot-nginx -y
    when: not certbot_installed.stat.exists

  # - name: Construct Certbot command
  #   set_fact:
  #     certbot_command: "certbot --nginx --non-interactive --redirect --agree-tos --email 'wp.monitoring.log@gmail.com' {{ domain_args | join(' ') }}"
  #   vars:
  #     domain_args: "{{ domain_names | select('match', '^[^\\s]+$') | map('regex_replace', '^', '-d ') | list }}"

  - name: Obtain Let's Encrypt SSL certificate
    command: >
      certbot --nginx --non-interactive --agree-tos --email wp.monitoring.log@gmail.com {{ domain_args }}
    vars:
      domain_args: "{{ domain_names | select('match', '^[^\\s]+$') | select('string') | map('regex_replace', '^(.*)$', '-d \\1 -d www.\\1 ') | list | join(' ') }}"
    register: certbot_result
    changed_when: "'Congratulations' in certbot_result.stdout"

  - name: Print Certbot command
    debug:
      msg: "{{ certbot_command }}"

  - name: Run Certbot command
    command: "{{ certbot_command }}"

  - name: Add a cron job to renew Certbot certificates twice a day as root
    cron:
      name: "Renew Certbot certificates"
      minute: "30"
      hour: "2,14"
      job: "certbot renew --quiet"
      state: present

  - name: Test Nginx configuration
    command: nginx -t
    register: nginx_test_result
    ignore_errors: yes

  - name: Restart Nginx
    service:
      name: nginx
      state: restarted
    when: nginx_test_result.rc == 0
