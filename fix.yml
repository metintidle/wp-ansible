---
- name: Fix 
  hosts: all
  become: yes
  vars:
    nginx_cache_dir: /var/cache/nginx
    old_nginx_cache_dir: /var/run/nginx-cache

  tasks:

    - name: Remove unconditional WP_MEMORY_LIMIT definition
      ansible.builtin.lineinfile:
        path: /home/ec2-user/html/wp-config.php
        regexp: '.*WP_MEMORY_LIMIT.*'
        state: absent

    - name: Set WordPress memory limit
      ansible.builtin.blockinfile:
        path: "/home/ec2-user/html/wp-config.php"
        marker: "# {mark} WP_MEMORY_LIMIT block"
        insertafter: "DB_COLLATE"
        block: |
          if ( ! defined( 'WP_MEMORY_LIMIT' ) ) {
              define( 'WP_MEMORY_LIMIT', '128M' );
          }
      # become_user: yes

    - name: Install Nginx Cache Plugin
      ansible.builtin.command:
        cmd: /usr/local/bin/wp plugin install nginx-cache --activate
      args:
        chdir: /home/ec2-user/html
      become_user: ec2-user

    - name: remove Nginx Helper plugin
      ansible.builtin.command:
        cmd: /usr/local/bin/wp plugin delete nginx-helper
      args:
        chdir: /home/ec2-user/html
      ignore_errors: yes
      become_user: ec2-user

    - name: Remove old nginx cache directory ownership cron job
      ansible.builtin.cron:
        name: "Change ownership of nginx cache directory"
        state: absent
        user: root

    - name: Remove old nginx cache directory and contents
      ansible.builtin.file:
        path: "{{ old_nginx_cache_dir }}"
        state: absent

    - name: Add fastcgi cache configuration to nginx.conf
      ansible.builtin.copy:
        src: configs/file_cache.conf
        dest: /etc/nginx/conf.d/fastcgi_cache_file.conf
        owner: root
        group: root
        mode: "0644"  

    - name: Create nginx cache directory
      ansible.builtin.command:
        cmd: sudo mkdir -p {{ nginx_cache_dir }}
        
    - name: Create cron job to set ownership and permissions of nginx cache directory
      ansible.builtin.cron:
        name: "Set nginx cache directory permissions"
        minute: "*/5"
        hour: "*"
        day: "*"
        month: "*"
        weekday: "*"
        job: "sudo chown -R ec2-user:nginx {{ nginx_cache_dir }} && sudo  chmod -R 774 {{ nginx_cache_dir }}"

    - name: Update PHP-FPM configuration for 512MB RAM
      lineinfile:
        path: /etc/php-fpm.d/www.conf
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      with_items:
        - { regexp: "^pm =", line: "pm = dynamic" }
        - { regexp: "^pm.max_children =.*", line: "pm.max_children = 3" }
        - { regexp: "^pm.start_servers =.*", line: "pm.start_servers = 1" }
        - {
            regexp: "^pm.min_spare_servers =.*",
            line: "pm.min_spare_servers = 1",
          }
        - {
            regexp: "^pm.max_spare_servers =.*",
            line: "pm.max_spare_servers = 2",
          }
        - { regexp: "^;?pm.max_requests =.*", line: "pm.max_requests = 500" } # Ensure it handles commented or uncommented

    - name: Increase PHP upload size
      lineinfile:
        path: /etc/php.ini
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      with_items:
        - {
            regexp: "^upload_max_filesize =.*",
            line: "upload_max_filesize = 300M",
          }
        - { regexp: "^post_max_size =.*", line: "post_max_size = 300M" }

    - name: Increase PHP memory limit
      lineinfile:
        path: /etc/php.ini
        regexp: "^memory_limit =.*"
        line: "memory_limit = 96M"
      become: yes

    - name: Update PHP realpath cache size
      lineinfile:
        path: /etc/php.ini
        line: "realpath_cache_size = 1024k"
        state: present
      become: yes

    - name: Update PHP realpath cache TTL
      lineinfile:
        path: /etc/php.ini
        line: "realpath_cache_ttl = 300"
        state: present
      become: yes

    - name: Check if fpm.sh exists in /usr/local/bin
      stat:
        path: /usr/local/bin/fpm.sh
      register: fpm_file
      tags: fpm

    - name: Copy fpm.sh to /usr/local/bin
      copy:
        src: bash/fpm.sh
        dest: /usr/local/bin/fpm.sh
        mode: 0755
        owner: root
        group: root
        force: yes

    - name: Install bc
      yum:
        name: bc
        state: present

    - name: Add a cron job to run fpm.sh every 5 minutes
      cron:
        name: "Run fpm.sh every 5 minutes"
        minute: "*/5"
        job: "/usr/local/bin/fpm.sh >> /var/log/fpm.log 2>&1"

    - name: Restart PHP-FPM and Nginx
      service:
        name: "{{ item }}"
        state: restarted
      with_items:
        - php-fpm
        - nginx