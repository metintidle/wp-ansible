---
- name: Install and Configure CrowdSec for WordPress
  hosts: all
  become: yes
  tasks:
    - name: Upload security configuration file
      ansible.builtin.copy:
        src: configs/security.conf
        dest: /etc/nginx/conf.d/security.conf
        owner: root
        group: root
        mode: "0644"
    - name: Add CrowdSec repository
      shell: >
        curl -s https://packagecloud.io/install/repositories/crowdsec/crowdsec/script.rpm.sh | bash

    - name: Install CrowdSec
      ansible.builtin.dnf:
        name: crowdsec
        state: present

    - name: Install firewall bouncer for iptables
      ansible.builtin.dnf:
        name: crowdsec-firewall-bouncer-iptables
        state: present

    - name: Enable CrowdSec service
      systemd:
        name: crowdsec
        enabled: yes
        state: started

    - name: Enable CrowdSec firewall bouncer
      systemd:
        name: crowdsec-firewall-bouncer
        enabled: yes
        state: started

    - name: Install WordPress specific collection
      shell: cscli collections install crowdsecurity/wordpress
      register: wordpress_collection
      changed_when: "'Nothing to do.' not in wordpress_collection.stdout"

    - name: Install WordPress XML-RPC brute force protection
      shell: cscli scenarios install crowdsecurity/http-bf-wordpress_bf_xmlrpc
      register: wordpress_xmlrpc
      changed_when: "'Nothing to do.' not in wordpress_xmlrpc.stdout"

    - name: Install iptables collection for log parsing
      shell: cscli collections install crowdsecurity/iptables
      register: iptables_collection
      changed_when: "'Nothing to do.' not in iptables_collection.stdout"

    - name: Reload CrowdSec to apply new configurations
      systemd:
        name: crowdsec
        state: reloaded

    - name: Check if CrowdSec is properly connected to the central API
      shell: cscli capi status
      register: capi_status
      changed_when: false
      failed_when: "'You can successfully interact with Central API (CAPI)' not in capi_status.stdout"

    # - name: Create backup of nginx.conf if it doesn't exist
    #   copy:
    #     src: /etc/nginx/nginx.conf
    #     dest: /etc/nginx/nginx.conf.backup
    #     remote_src: yes
    #     force: no

    # Optional: Configure Nginx to log proper client IP when behind a proxy
    # - name: Configure Nginx for proper IP logging when behind a proxy
    #   blockinfile:
    #     path: /etc/nginx/nginx.conf
    #     insertafter: "http {"
    #     block: |
    #       # Set real IP if behind a proxy
    #       set_real_ip_from 10.0.0.0/8;
    #       set_real_ip_from 172.16.0.0/12;
    #       set_real_ip_from 192.168.0.0/16;
    #       real_ip_header X-Forwarded-For;
    #       real_ip_recursive on;
    #   notify: Reload Nginx

    - name: Disable specific CrowdSec scenarios
      ansible.builtin.shell: "cscli scenarios remove {{ item }} --force"
      loop:
        # --- Enterprise Appliances/VPNs ---
        - crowdsecurity/f5-big-ip-cve-2020-5902
        - crowdsecurity/fortinet-cve-2018-13379
        - crowdsecurity/pulse-secure-sslvpn-cve-2019-11510
        - crowdsecurity/vmware-cve-2022-22954
        - crowdsecurity/vmware-vcenter-vmsa-2021-0027
        # --- Other Applications/Services (not part of a typical WP stack) ---
        - crowdsecurity/grafana-cve-2021-43798
        # --- Other Web Servers (you are using Nginx) ---
        - crowdsecurity/http-cve-2021-41773  # Apache specific
        - crowdsecurity/http-cve-2021-42013  # Apache specific
        # --- Other PHP Frameworks/Apps ---
        - crowdsecurity/CVE-2017-9841         # PHPUnit RCE
        - crowdsecurity/CVE-2019-18935         # ThinkPHP RCE
        - crowdsecurity/thinkphp-cve-2018-20062
        # --- Database Servers (yours is remote) ---
        - crowdsecurity/mysql-bf
        # --- Other Services/WAFs ---
        - crowdsecurity/vsftpd-bf      # FTP Server Brute-Force
        - crowdsecurity/modsecurity    # ModSecurity WAF (if not used with Nginx)
      register: disable_scenarios_result
      changed_when: disable_scenarios_result.results | map(attribute='stdout') | select('search', ' disabled') | list | length > 0
      notify: Reload CrowdSec

  handlers:
    - name: Reload Nginx
      systemd:
        name: nginx
        state: reloaded
    - name: Reload CrowdSec to apply new configurations
      systemd:
        name: crowdsec
        state: reloaded
