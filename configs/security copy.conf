# Rate limiting zone definitions
limit_req_zone $binary_remote_addr zone=one:10m rate=1r/s;
limit_conn_zone $binary_remote_addr zone=addr:10m;

# Global DDoS protection
client_body_timeout 10s;
client_header_timeout 10s;
client_max_body_size 100M;

server {
  listen 80 default_server;
  server_name _;

  # Security headers
  add_header X-Frame-Options "SAMEORIGIN" always;
  add_header X-XSS-Protection "1; mode=block" always;
  add_header X-Content-Type-Options "nosniff" always;
  add_header Referrer-Policy "strict-origin-when-cross-origin" always;
  add_header Content-Security-Policy "default-src 'self' https: data: blob: 'unsafe-inline' 'unsafe-eval'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://*.elementor.com https://*.googleapis.com https://*.gstatic.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com;" always;
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

  # Rate limiting
  limit_conn addr 10;
  limit_req zone=one burst=10 nodelay;

  # Block bad bots and known malicious user agents
  if ($http_user_agent ~* (wget|curl|python-requests|nikto|sqlmap|havij|nmap|nessus|whatweb|openvas|jbrofuzz|w3af|acunetix|mj12bot|zgrab|masscan|gobuster|dirbuster)) {
    deny all;
    return 444;
  }

  # Block Spring actuator and other non-WordPress paths
  location ~* /(actuator|api|admin|jenkins|backup|env|info|mappings.json|application.properties) {
    access_log off;
    deny all;
    return 444; 
  }

  # Block sensitive WordPress and system files
  location ~* (wp-config\.php|wp-config-sample\.php|php\.ini|wp-cli\.yml|wp-config-backup\.php|\.htaccess|readme\.html|license\.txt|xmlrpc\.php)$ {
    deny all;
  }

  # Block common exploits and sensitive files
  location ~* \.(git|svn|hg|txt|md|exe|bat|sh|sql|conf|yml|yaml|env|bak|old|orig|backup|.env)$ {
    deny all;
  }

  # Block access to sensitive files
  location ~ /\.(env|git|htaccess|config.json|composer.json|composer.lock|package.json|package-lock.json)$ {
    deny all;
    return 404;
  }

  # Serve static files (including fonts and SVGs)
  location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
    expires max;
    access_log off;
    log_not_found off;
  }
    # Block suspicious PHP files
    location ~* /(eval-stdin|phpunit|wp-config-sample)\.php$ {
      deny all;
      return 444;
    }
    # Deny access to hidden files
      location ~ /\. {
        deny all;
      }

  # Disable directory listing
  autoindex off;


  # Allow known WordPress paths with prefix or exact match
    location ^~ /wp-admin/ {}
    location ^~ /wp-includes/ {}
    location ^~ /wp-content/ {}
    location ^~ /wp-json/ {}
    location = /wp-login.php {}
    location = /xmlrpc.php {}
    location = /index.php {}

    # Catch-all: deny everything else
    location / {
        return 404;
    }

 # Block REST API user enumeration
location = /wp-json/wp/v2/users {
    deny all;
    return 444;
}

# Protect WordPress login page with stricter rate limiting
location = /wp-login.php {
    limit_req zone=one burst=3 nodelay;
    include fastcgi_params;
    fastcgi_pass unix:/run/php-fpm/www.sock;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_index index.php;
}

# Allow Elementor AJAX endpoints (more specific, place before general wp-admin rule)
location = /wp-admin/admin-ajax.php {
    include fastcgi_params;
    fastcgi_pass unix:/run/php-fpm/www.sock;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_index index.php;
}

# WordPress wp-admin restrictions
location ~* ^/wp-admin/.*\.php$ {
    include fastcgi_params;
    fastcgi_pass unix:/run/php-fpm/www.sock;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_index index.php;
}

# Deny access to sensitive wp-admin subdirectories
location ~ ^/wp-admin/includes/.*\.php$ {
    deny all;
}

location ~ ^/wp-admin/network/.*\.php$ {
    deny all;
}

# Allow essential wp-includes files but block dangerous ones
location ~ ^/wp-includes/(theme-compat|js|css)/.*$ {
    allow all;
}

# Block most PHP execution in wp-includes (but allow essential core files)
location ~ ^/wp-includes/.*\.php$ {
    # Allow essential WordPress core files
    location ~ ^/wp-includes/(ms-files|plugin)\.php$ {
        include fastcgi_params;
        fastcgi_pass unix:/run/php-fpm/www.sock;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_index index.php;
    }
    deny all;
}

# Allow static assets in wp-includes
location ~* ^/wp-includes/.*\.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|eot|ttf)$ {
    expires 1y;
    add_header Cache-Control "public, immutable";
}

# Allow Elementor frontend editor access
location ~* ^/wp-json/elementor/ {
    try_files $uri $uri/ /index.php?$args;
}

# Allow plugin PHP files
location ~* ^/wp-content/plugins/.*\.php$ {
    include fastcgi_params;
    fastcgi_pass unix:/run/php-fpm/www.sock;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_index index.php;
}

# Allow theme PHP files
location ~* ^/wp-content/themes/.*\.php$ {
    include fastcgi_params;
    fastcgi_pass unix:/run/php-fpm/www.sock;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_index index.php;
}

# Block PHP execution in uploads directory (SECURITY CRITICAL)
location ~* ^/wp-content/uploads/.*\.php$ {
    deny all;
    access_log off;
    return 403;
}

# Block xmlrpc.php in subdirectories  
location ~* ^/.+/xmlrpc\.php$ {
    deny all;
    return 404;
}

  # Block PHP files in uploads directory
  # location ~* /(?:uploads|files|wp-content/uploads)/.*\.php$ {
  #   deny all;
  #   return 404;
  # }

}