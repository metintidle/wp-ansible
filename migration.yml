- name: Download WordPress files from remote server
  hosts: all # This runs on target servers
  gather_facts: false

  vars:
    source_private_key_raw: "{{ lookup('env', 'PRIVATE_KEY') }}"
    source_host_ip: "{{ lookup('env', 'IP') }}"
    source_user: "ec2-user"
    private_key_path: "/tmp/source_key.pem"

  tasks:
  - name: Write SSH private key for source server on localhost
    copy:
      content: "{{ source_private_key_raw | replace('\\n', '\n')}}"
      dest: "{{ private_key_path }}"
      mode: '0600'
    delegate_to: localhost
    run_once: true

  - name: Copy private key formatting script
    copy:
      src: bash/privatekey.sh
      dest: /tmp/privatekey.sh
      mode: '0755'
    delegate_to: localhost
    run_once: true

  - name: Fix private key format with proper newlines
    shell: /tmp/privatekey.sh "{{ private_key_path }}"
    delegate_to: localhost
    run_once: true
    register: format_debug

  - name: Show formatting debug output
    debug:
      var: format_debug.stdout_lines
    delegate_to: localhost
    run_once: true

  - name: Alternative - Write properly formatted key directly
    copy:
      content: |
        {{ source_private_key_raw }}
      dest: "{{ private_key_path }}.alt"
      mode: '0600'
    delegate_to: localhost
    run_once: true

  - name: Compare file sizes
    shell: |
      echo "Original formatted file size: $(wc -c < '{{ private_key_path }}' 2>/dev/null || echo 'File not found')"
      echo "Alternative file size: $(wc -c < '{{ private_key_path }}.alt')"
      echo "Alternative file content:"
      cat "{{ private_key_path }}.alt"
    delegate_to: localhost
    run_once: true
    register: file_comparison

  - name: Show file comparison
    debug:
      var: file_comparison.stdout_lines
    delegate_to: localhost
    run_once: true

  # - name: Use alternative key file if original is empty
  #   shell: |
  #     if [ ! -s "{{ private_key_path }}" ]; then
  #       echo "Original file is empty, using alternative"
  #       cp "{{ private_key_path }}.alt" "{{ private_key_path }}"
  #     else
  #       echo "Original file is not empty, keeping it"
  #       # rm -f "{{ private_key_path }}.alt"
  #     fi
  #     chmod 600 "{{ private_key_path }}"
  #   delegate_to: localhost
  #   run_once: true

  - name: Verify private key format
    shell: |
      head -1 "{{ private_key_path }}"
      tail -1 "{{ private_key_path }}"
    delegate_to: localhost
    run_once: true
    register: key_check

  - name: Display key format check
    debug:
      var: key_check.stdout_lines
    delegate_to: localhost
    run_once: true

  - name: Print private key file content
    shell: cat "{{ private_key_path }}"
    delegate_to: localhost
    run_once: true
    register: key_content

  - name: Display private key content
    debug:
      var: key_content.stdout_lines
    delegate_to: localhost
    run_once: true

  - name: Test SSH connection to source server
    shell: |
      ssh -i "{{ private_key_path }}" \
          -o StrictHostKeyChecking=no \
          -o UserKnownHostsFile=/dev/null \
          -o ConnectTimeout=10 \
          "{{ source_user }}@{{ source_host_ip }}" \
          "echo 'SSH connection successful'"
    delegate_to: localhost
    run_once: true
    register: ssh_test
    ignore_errors: yes

  - name: Display SSH test result
    debug:
      msg:
      - "SSH test return code: {{ ssh_test.rc }}"
      - "SSH test stdout: {{ ssh_test.stdout }}"
      - "SSH test stderr: {{ ssh_test.stderr }}"
    delegate_to: localhost
    run_once: true

  - name: Verify key permissions and ownership
    shell: |
      ls -la "{{ private_key_path }}"
      file "{{ private_key_path }}"
    delegate_to: localhost
    run_once: true
    register: key_info

  - name: Display key info
    debug:
      var: key_info.stdout_lines
    delegate_to: localhost
    run_once: true

  - name: Download WordPress files from source server
    synchronize:
      src: "{{ wordpress_source_path | default('/usr/share/nginx/html/') }}"
      dest: "/usr/share/nginx/html/"
      delete: yes
      rsync_opts:
      - "--exclude=.git"
      - "--exclude=*.log"
      mode: pull
    delegate_to: localhost
    vars:
      ansible_host: "{{ source_host_ip }}"
      ansible_user: "{{ source_user }}"
      ansible_ssh_private_key_file: "{{ private_key_path }}"
      ansible_ssh_common_args: "-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"

  - name: Fix ownership after download
    file:
      path: /usr/share/nginx/html/
      owner: ec2-user
      group: nginx
      recurse: yes

  - name: Remove temporary private key from localhost
    file:
      path: "{{ private_key_path }}"
      state: absent
    delegate_to: localhost
    run_once: true
